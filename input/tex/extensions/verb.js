(()=>{"use strict";var e={d:(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{VerbConfiguration:()=>b});const n=("undefined"!=typeof window?window:global).MathJax._.components.global,r=(n.GLOBAL,n.isObject,n.combineConfig,n.combineDefaults,n.combineWithMathJax),a=(n.MathJax,MathJax._.input.tex.HandlerTypes),o=a.ConfigurationType,i=a.HandlerType,s=MathJax._.input.tex.Configuration,l=s.Configuration,p=(s.ConfigurationHandler,s.ParserConfiguration,MathJax._.input.tex.TexConstants.TexConstant),c=MathJax._.input.tex.TokenMap,g=(c.parseResult,c.AbstractTokenMap,c.RegExpMap,c.AbstractParseMap,c.CharacterMap,c.DelimiterMap,c.MacroMap,c.CommandMap),u=(c.EnvironmentMap,MathJax._.input.tex.TexError.default);new g("verb",{verb:{Verb(e,t){const n=e.GetNext(),r=++e.i;if(""===n)throw new u("MissingArgFor","Missing argument for %1",t);for(;e.i<e.string.length&&e.string.charAt(e.i)!==n;)e.i++;if(e.i===e.string.length)throw new u("NoClosingDelim","Can't find closing delimiter for %1",e.currentCS);const a=e.string.slice(r,e.i).replace(/ /g,"\xa0");e.i++,e.Push(e.create("token","mtext",{mathvariant:p.Variant.MONOSPACE},a))}}.Verb});const b=l.create("verb",{[o.HANDLER]:{[i.MACRO]:["verb"]}});MathJax.loader&&MathJax.loader.checkVersion("[tex]/verb","4.0.0-rc.4","tex-extension"),r({_:{input:{tex:{verb:{VerbConfiguration:t}}}}})})();